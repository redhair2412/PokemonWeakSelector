{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jovec\\\\Desktop\\\\Learn web\\\\React\\\\apitest\\\\src\\\\Dropdown.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './Dropdown.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Dropdown({\n  title,\n  items = [],\n  multiSelect = false\n}) {\n  _s();\n\n  const [open, setOpen] = useState(false);\n  const [selection, setSelection] = useState([]);\n\n  const toggle = () => setOpen(!open);\n\n  function handleOnClick(item) {\n    if (!selection.some(current => current.id === item.id)) {\n      if (!multiselect) {\n        setSelection([item]);\n      } else if (multiSelect) {\n        setSelection([...selection, item]);\n      }\n    } else {\n      let selectionAfterRemoval = selection;\n      selectionAfterRemoval = selectionAfterRemoval.filter(current => current.id !== item.id);\n      setSelection([...selectionAfterRemoval]);\n    }\n  }\n\n  function isItemInSelection(item) {\n    if (selection.find(current => current.id === item.id)) {\n      return true;\n    }\n\n    return false;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dd-wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      tabIndex: 0,\n      className: \"dd-header\",\n      role: \"button\",\n      onKeyPress: () => toggle(!open),\n      onClick: () => toggle(!open),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dd-header_tittle\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"dd-header_title--bold\",\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dd-header_action\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: open ? 'close' : 'open'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), open && /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"dd-list\",\n      children: items.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"dd-list-item\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => handleOnClick(item),\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: item.value\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: isItemInSelection(item) && 'Selected'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 25\n        }, this)\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Dropdown, \"/m8G8TYhNeArTCcMK+Chsy0YlVc=\");\n\n_c = Dropdown;\nexport default Dropdown;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dropdown\");","map":{"version":3,"sources":["C:/Users/jovec/Desktop/Learn web/React/apitest/src/Dropdown.js"],"names":["React","useState","Dropdown","title","items","multiSelect","open","setOpen","selection","setSelection","toggle","handleOnClick","item","some","current","id","multiselect","selectionAfterRemoval","filter","isItemInSelection","find","map","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport './Dropdown.css'\r\n\r\nfunction Dropdown({ title, items = [], multiSelect = false }){\r\n    const [open, setOpen] = useState(false);\r\n    const[selection, setSelection] = useState([]);\r\n    const toggle = () => setOpen(!open);\r\n\r\n    function handleOnClick(item){\r\n        if(!selection.some(current => current.id === item.id)) {\r\n            if(!multiselect){\r\n                setSelection([item]);\r\n            } else if(multiSelect){\r\n                setSelection([...selection, item]);\r\n            }\r\n        } else {\r\n            let selectionAfterRemoval = selection;\r\n            selectionAfterRemoval = selectionAfterRemoval.filter(\r\n                current => current.id !== item.id\r\n            );\r\n            setSelection([...selectionAfterRemoval])\r\n        }\r\n    }\r\n\r\n    function isItemInSelection(item){\r\n        if (selection.find(current => current.id === item.id)) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    return(\r\n        <div className=\"dd-wrapper\">\r\n            <div\r\n                tabIndex={0} \r\n                className=\"dd-header\" \r\n                role=\"button\" \r\n                onKeyPress={() => \r\n                toggle(!open)} \r\n                onClick={() => toggle(!open)}\r\n            >\r\n                <div className=\"dd-header_tittle\">\r\n                    <p className='dd-header_title--bold'>{title}</p>\r\n                </div>\r\n                <div className='dd-header_action'>\r\n                    <p>{open ? 'close' : 'open'}</p>\r\n                </div>\r\n            </div> \r\n            {open && (\r\n                <ul className='dd-list'>\r\n                    {items.map(item => (\r\n                        <li className='dd-list-item' key={item.id}>\r\n                        <button type='button' onClick={() => handleOnClick(item)}>\r\n                            <span>{item.value}</span>\r\n                            <span>{isItemInSelection(item) && 'Selected'}</span>\r\n                        </button>\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n            )}   \r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default Dropdown;"]},"metadata":{},"sourceType":"module"}