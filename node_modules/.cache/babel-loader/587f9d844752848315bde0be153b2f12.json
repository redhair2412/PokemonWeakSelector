{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jovec\\\\Desktop\\\\Web Projects\\\\Pokemon\\\\src\\\\Appapi.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport PanelList from './PanelList';\nimport SearchBox from './SearchBox';\nimport Dropdown from './Dropdown';\nimport gameVers from \"./GameVers\";\nimport TeamBox from './TeamBox';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Appapi() {\n  _s();\n\n  const [pokedex, setPokedex] = useState([]);\n  const [searchfield, setSearchField] = useState('');\n  const [gameVersion, setGameVersion] = useState([\"https://pokeapi.co/api/v2/pokedex/2\"]);\n  const [value, setvalue] = useState(null);\n  const [card, setCard] = useState('');\n  useEffect(() => {\n    async function fetchData() {\n      const urls = gameVersion;\n      const res = await Promise.all(urls.map(url => fetch(url)));\n      const pokemonz = res.map(dta => {\n        return dta.json().then(data => {\n          let results = data.pokemon_entries;\n          let promisesArray = results.map(result => {\n            return fetch(result.pokemon_species.url.replace(/pokemon-species/g, \"pokemon\")).then(response => response.json());\n          });\n          return Promise.all(promisesArray);\n        });\n      });\n      Promise.all(pokemonz).then(values => {\n        setPokedex(values);\n      });\n    }\n\n    fetchData();\n  }, [gameVersion]);\n\n  const onSearchChange = event => {\n    setSearchField(event.target.value);\n  };\n\n  const filteredPokemon = pokedex.map(arry => {\n    return arry.filter(pokemon => {\n      return pokemon.name.toLowerCase().includes(searchfield.toLowerCase());\n    });\n  }).flat(1);\n  const prePanel = filteredPokemon.flat(1);\n  console.log(filteredPokemon);\n  console.log(card);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Pokemon Type Strength\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Select your game and pokemon to see what types they can beat\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(SearchBox, {\n      searchChange: onSearchChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: 250\n      },\n      children: /*#__PURE__*/_jsxDEV(Dropdown, {\n        options: gameVers,\n        prompt: \"Select Game...\",\n        value: value,\n        onChange: val => setvalue(val),\n        gameVerChange: url => setGameVersion(url)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(TeamBox, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(PanelList, {\n      pokedex: prePanel,\n      carNumb: num => setCard(num)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 13\n  }, this);\n}\n\n_s(Appapi, \"HTiNsAItQHvaXdvLxzJ7HtaGyJ4=\");\n\n_c = Appapi;\nexport default Appapi; // Old Files\n// async function fetchData() {\n//     const res = await fetch(gameVersion);\n//     res\n//         .json()\n//         .then(data => {\n//             let results = data.pokemon_entries;\n//             let promisesArray = results\n//               .map(result => {\n//                 return fetch(result.pokemon_species.url\n//                     .replace(/pokemon-species/g, \"pokemon\"))\n//                     .then(response => response.json());\n//               })\n//         return Promise.all(promisesArray);})\n//         .then((data) => setPokedex(data));\n// }\n// fetchData();\n// },[gameVersion]);\n// const filteredPokemon = pokedex.filter(pokemon => {\n//         return pokemon.name.toLowerCase().includes(searchfield.toLowerCase());\n//     })\n\nvar _c;\n\n$RefreshReg$(_c, \"Appapi\");","map":{"version":3,"sources":["C:/Users/jovec/Desktop/Web Projects/Pokemon/src/Appapi.js"],"names":["React","useEffect","useState","PanelList","SearchBox","Dropdown","gameVers","TeamBox","Appapi","pokedex","setPokedex","searchfield","setSearchField","gameVersion","setGameVersion","value","setvalue","card","setCard","fetchData","urls","res","Promise","all","map","url","fetch","pokemonz","dta","json","then","data","results","pokemon_entries","promisesArray","result","pokemon_species","replace","response","values","onSearchChange","event","target","filteredPokemon","arry","filter","pokemon","name","toLowerCase","includes","flat","prePanel","console","log","width","val","num"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport PanelList from './PanelList';\r\nimport SearchBox from './SearchBox';\r\nimport Dropdown  from './Dropdown';\r\nimport gameVers from \"./GameVers\";\r\nimport TeamBox from './TeamBox';\r\n\r\n\r\n\r\nfunction Appapi() {   \r\n\r\n    const [pokedex, setPokedex] = useState([]);\r\n    const [searchfield, setSearchField] = useState('');\r\n    const [gameVersion, setGameVersion] = useState([\"https://pokeapi.co/api/v2/pokedex/2\"]);\r\n    const [value, setvalue] = useState(null);\r\n\r\n    const [card, setCard] = useState('')\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            const urls = gameVersion;\r\n            const res = await Promise.all(urls.map(url => fetch(url)));\r\n            const pokemonz = res.map(dta => {\r\n                return dta\r\n                .json()\r\n                .then(data => {\r\n                    let results = data.pokemon_entries;\r\n                    let promisesArray = results\r\n                      .map(result => {\r\n                        return fetch(result.pokemon_species.url\r\n                            .replace(/pokemon-species/g, \"pokemon\"))\r\n                            .then(response => response.json());\r\n                      })\r\n                return Promise.all(promisesArray);})\r\n            })\r\n            Promise.all(pokemonz).then((values) => {\r\n                setPokedex(values)\r\n            })               \r\n        }\r\n        fetchData();\r\n            \r\n    },[gameVersion]);\r\n\r\n\r\n    const onSearchChange = (event) => {\r\n        setSearchField(event.target.value);\r\n    }   \r\n\r\n    const filteredPokemon = pokedex.map(arry => {\r\n            return arry.filter(pokemon => {\r\n                return pokemon.name.toLowerCase().includes(searchfield.toLowerCase());\r\n            })\r\n        }).flat(1);\r\n\r\n    const prePanel = filteredPokemon.flat(1);\r\n        console.log(filteredPokemon);\r\n    console.log(card);\r\n        return (\r\n            <div>\r\n                <h1>Pokemon Type Strength</h1>\r\n                <p>Select your game and pokemon to see what types they can beat</p>\r\n                <SearchBox searchChange={onSearchChange}/>\r\n                <div style={{width: 250}}>\r\n                    <Dropdown \r\n                        options={gameVers} \r\n                        prompt='Select Game...' \r\n                        value={value} \r\n                        onChange={val => setvalue(val)}\r\n                        gameVerChange={url => setGameVersion(url)} />\r\n                </div>\r\n                <div>\r\n                    <TeamBox />\r\n                </div>\r\n                <PanelList pokedex={prePanel} carNumb={num => setCard(num)} />\r\n            </div>\r\n            );\r\n    \r\n}\r\n\r\nexport default Appapi;\r\n\r\n\r\n// Old Files\r\n\r\n    // async function fetchData() {\r\n    //     const res = await fetch(gameVersion);\r\n    //     res\r\n    //         .json()\r\n    //         .then(data => {\r\n    //             let results = data.pokemon_entries;\r\n    //             let promisesArray = results\r\n    //               .map(result => {\r\n    //                 return fetch(result.pokemon_species.url\r\n    //                     .replace(/pokemon-species/g, \"pokemon\"))\r\n    //                     .then(response => response.json());\r\n    //               })\r\n    //         return Promise.all(promisesArray);})\r\n    //         .then((data) => setPokedex(data));\r\n            \r\n    // }\r\n    // fetchData();\r\n        \r\n    // },[gameVersion]);\r\n    \r\n\r\n\r\n       // const filteredPokemon = pokedex.filter(pokemon => {\r\n        //         return pokemon.name.toLowerCase().includes(searchfield.toLowerCase());\r\n        //     })\r\n\r\n"]},"metadata":{},"sourceType":"module"}